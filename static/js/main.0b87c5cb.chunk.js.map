{"version":3,"sources":["components/Profile/profile.module.css","components/FriendList/friendList.module.css","components/Statistics/statistics.module.css","components/TransactionHistory/transaction.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","width","stat","list","label","quantity","Statistics","title","statistics","statList","map","item","style","backgroundColor","Math","random","percentage","id","FriendListItem","isOnline","status","FriendList","friends","friendList","friend","TransactionHistory","items","transactionTable","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b87c5cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2f7sg\",\"description\":\"profile_description__26kFC\",\"avatar\":\"profile_avatar__1St8I\",\"tag\":\"profile_tag__3sWPu\",\"location\":\"profile_location__1Mg2b\",\"name\":\"profile_name__34IHl\",\"stat\":\"profile_stat__3uIkC\",\"label\":\"profile_label__39URe\",\"quantity\":\"profile_quantity__KeaUo\",\"list\":\"profile_list__Gytsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendList_friendList__3Lk-d\",\"item\":\"friendList_item__1pe58\",\"online\":\"friendList_online__1OtrA\",\"offline\":\"friendList_offline__20FXW\",\"avatar\":\"friendList_avatar__3I5Be\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__LBFXx\",\"title\":\"statistics_title__1V8MF\",\"statList\":\"statistics_statList__2iMzP\",\"item\":\"statistics_item__1qeSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionTable\":\"transaction_transactionTable__3XNqp\",\"type\":\"transaction_type__36vei\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profile.module.css';\r\n\r\nconst Profile = ({\r\n    name, tag, location, avatar, stats: { followers, views, likes },\r\n}) => (\r\n    <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                width=\"180px\"\r\n                className={styles.avatar}\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stat}>\r\n            <li className={styles.list}>\r\n                <span className={styles.label}>Followers</span>\r\n                <span className={styles.quantity}>{followers}</span>\r\n            </li>\r\n            <li className={styles.list}>\r\n                <span className={styles.label}> Views</span>\r\n                <span className={styles.quantity}>{views}</span>\r\n            </li>\r\n            <li className={styles.list}>\r\n                <span className={styles.label}>Likes</span>\r\n                <span className={styles.quantity}>{likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n    }),\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css'\r\n\r\nconst Statistics = ({\r\n    title, stats\r\n}) => (\r\n    <section className={styles.statistics}>\r\n        {typeof title !== 'undefined' && <h2 className={styles.title}>{title}</h2>}\r\n\r\n        <ul className={styles.statList}>\r\n            {stats.map(stat => (\r\n                <li className={styles.item}\r\n                    key={stat.id}\r\n                    style={{\r\n                        backgroundColor: `hsl(${Math.random() * 360}, 100%, 75%)`,\r\n                    }}>\r\n                    <span className={styles.label}>{stat.label}</span>\r\n                    <span className={styles.percentage}>{stat.percentage}</span>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </section>\r\n)\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n    return (\r\n        <li className={styles.item}>\r\n            <span className={styles.status}>{isOnline}</span>\r\n            <img src={avatar} alt=\"\" width=\"48\" className={styles.avatar} />\r\n            <p className={styles.name}>{name}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem'\r\nimport styles from './friendList.module.css';\r\n\r\nconst FriendList = ({\r\n    friends\r\n}) => (\r\n    <ul className={styles.friendList}>\r\n        {friends.map(friend => (\r\n            <FriendListItem\r\n                key={friend.id}\r\n                avatar={friend.avatar}\r\n                name={friend.name}\r\n                isOnline={friend.isOnline}\r\n            />\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './transaction.module.css'\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n    <table className={styles.transactionTable}>\r\n        <thead>\r\n            <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            {items.map(item => (\r\n                <tr key={item.id}>\r\n                    <td className={styles.type}>{item.type}</td>\r\n                    <td className={styles.type}>{item.amount}</td>\r\n                    <td className={styles.type}>{item.currency}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n)\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            type: PropTypes.string.isRequired,\r\n            id: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\n\r\nexport default TransactionHistory;","import Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport TransactionHistory from './components//TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}